{"version":3,"sources":["webpack:///./src/libs/magnifier.js","webpack:///./src/templates/detail.js"],"names":["Magnifier","img","glass","zoom","bw","this","w","offsetWidth","h","offsetHeight","moveMagnifier","bind","init","style","backgroundImage","src","backgroundRepeat","backgroundSize","width","height","addEventListener","e","pos","x","y","preventDefault","getCursorPos","left","top","backgroundPosition","a","window","event","getBoundingClientRect","pageX","pageY","pageXOffset","pageYOffset","query","Detail","data","pageContext","state","useContext","GlobalStateContext","useState","isPrevVisible","setPrevVisible","dataJson","items","length","isNextVisible","setNextVisible","container","useRef","item","find","name","itemName","controlMoreItems","type","c","current","block","firstElementChild","clientWidth","scrollTo","scrollLeft","scrollWidth","menuList","background","className","itemHeight","ref","fluid","images","childImageSharp","imgSize","onLoad","imageRef","id","detail","drops","colors","map","row","index","key","colorCode","backgroundColor","onScroll","itemNameSplit","split","to","toLowerCase","onClick"],"mappings":"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","file":"component---src-templates-detail-js-09bf8899135d984f0e8d.js","sourcesContent":["export default class Magnifier {\n  constructor (img, glass, zoom = 2, bw = 3) {\n    this.img = img\n    this.glass = glass\n    this.w = glass.offsetWidth / 2\n    this.h = glass.offsetHeight / 2\n    this.bw = bw\n    this.zoom = zoom\n\n    this.moveMagnifier = this.moveMagnifier.bind(this)\n    this.init()\n  }\n\n  init () {\n    /* Set background properties for the magnifier glass: */\n    this.glass.style.backgroundImage = `url('${this.img.src}')`\n    this.glass.style.backgroundRepeat = `no-repeat`\n    this.glass.style.backgroundSize = `${this.img.width * this.zoom}px ${this.img.height * this.zoom}px`\n    \n    /* Execute a function when someone moves the magnifier glass over the image: */\n    this.glass.addEventListener('mousemove', this.moveMagnifier)\n    this.img.addEventListener('mousemove', this.moveMagnifier)\n\n    /*and also for touch screens:*/\n    this.glass.addEventListener('touchmove', this.moveMagnifier)\n    this.img.addEventListener('touchmove', this.moveMagnifier)\n  }\n\n  moveMagnifier (e) {\n    let pos, x, y\n    /* Prevent any other actions that may occur when moving over the image */\n    e.preventDefault()\n    /* Get the cursor's x and y positions: */\n    pos = this.getCursorPos(e)\n    x = pos.x\n    y = pos.y\n    /* Prevent the magnifier glass from being positioned outside the image: */\n    if (x > this.img.width - this.w / this.zoom) {\n      x = this.img.width - this.w / this.zoom\n    }\n    if (x < this.w / this.zoom) {\n      x = this.w / this.zoom\n    }\n    if (y > this.img.height - this.h / this.zoom) {\n      y = this.img.height - this.h / this.zoom\n    }\n    if (y < this.h / this.zoom) {\n      y = this.h / this.zoom\n    }\n    /* Set the position of the magnifier glass: */\n    this.glass.style.left = `${x - this.w}px`\n    this.glass.style.top = `${y - this.h}px`\n    /* Display what the magnifier glass \"sees\": */\n    this.glass.style.backgroundPosition = `-${x * this.zoom - this.w + this.bw}px -${y * this.zoom - this.h + this.bw}px`\n\n  }\n\n  getCursorPos (e) {\n    let a,\n        x = 0,\n        y = 0\n    e = e || window.event\n    /* Get the x and y positions of the image: */\n    a = this.img.getBoundingClientRect()\n    /* Calculate the cursor's x and y coordinates, relative to the image: */\n    x = e.pageX - a.left\n    y = e.pageY - a.top\n    /* Consider any page scrolling: */\n    x = x - window.pageXOffset\n    y = y - window.pageYOffset\n    return { x, y }\n  }\n}","import React, { useContext, useState, useRef } from 'react'\nimport { Link, graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport Magnifier from '../libs/magnifier'\nimport { GlobalStateContext } from '../context/GlobalContextProvider'\nimport Header from '../components/header'\n\nexport const query = graphql`\n  query($itemName: String) {\n    dataJson(items: { elemMatch: { name: { eq: $itemName } } }) {\n      items {\n        name\n        id\n        detail\n        drops\n        colors\n        images {\n          childImageSharp {\n            fluid(maxWidth: 600, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nconst Detail = ({ data, pageContext }) => {\n  const state = useContext(GlobalStateContext)\n  const [isPrevVisible, setPrevVisible] = useState(false)\n  const [isNextVisible, setNextVisible] = useState(data.dataJson.items.length > 5)\n  const container = useRef()\n  const glass = useRef()\n  const img = useRef()\n  const item = data.dataJson.items.find(item => item.name === pageContext.itemName)\n\n  const controlMoreItems = type => {\n    const c = container.current\n    const block = c.firstElementChild.clientWidth + 1\n    switch (type) {\n      case 'prev':\n        c.scrollTo(c.scrollLeft - block, 0)\n        break\n      case 'next':\n        c.scrollTo(c.scrollLeft + block, 0)\n        break\n      default:\n        setPrevVisible(c.scrollLeft > 0)\n        setNextVisible(c.scrollLeft + c.clientWidth < c.scrollWidth)\n    }\n  }\n\n  return (\n    <div>\n      <Header menuList={pageContext.menuList} background={true} />\n      <section className=\"detail\">\n        <div className=\"item\" style={{ height: `${state.itemHeight}px` }}>\n          <div className=\"img-box\">\n            <div ref={glass} className=\"glass\" />\n            <Img\n              ref={img}\n              fluid={item.images[1].childImageSharp.fluid}\n              style={{\n                width: `${state.imgSize}px`,\n                height: `${state.imgSize}px`,\n              }}\n              onLoad={() => {\n                new Magnifier(img.current.imageRef.current, glass.current)\n              }}\n            />\n          </div>\n        </div>\n        <div className=\"item\" style={{ height: `${state.itemHeight}px` }}>\n          <div className=\"top\">\n            <h2>{item.name}</h2>\n            <h3>{item.id}</h3>\n          </div>\n          <div className=\"bottom\">\n            <div>\n              <h4>DETAILS</h4>\n              <div className=\"text\">\n                <i>○ </i> {item.detail}\n              </div>\n            </div>\n            <div>\n              <h4>PRODUCT INFOMATION</h4>\n              <div className=\"drops\">○ the number of drops: {item.drops}</div>\n              <div className=\"colors\">\n                <span>○ colors: </span>\n                {item.colors.map((row, index) => (\n                  <ul key={index}>\n                    {row.map(colorCode => (\n                      <li\n                        style={{ backgroundColor: colorCode }}\n                        key={colorCode}\n                      >\n                        <div className=\"box\" />\n                      </li>\n                    ))}\n                  </ul>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"more\">\n          <ul ref={container} onScroll={controlMoreItems}>\n            {data.dataJson.items.map(item => {\n              if (item.name !== pageContext.itemName) {\n                const itemNameSplit = item.name.split(/\\s/g)\n                return (\n                  <li key={item.id}>\n                    <Link\n                      to={`/${itemNameSplit[0].toLowerCase()}/${\n                        itemNameSplit[1]\n                      }`}\n                    >\n                      <Img fluid={item.images[1].childImageSharp.fluid} />\n                      <div className=\"box\">\n                        <div className=\"text\">{item.id}</div>\n                      </div>\n                    </Link>\n                  </li>\n                )\n              } else {\n                return null\n              }\n            })}\n          </ul>\n          <div className=\"arrow\">\n            <button\n              className={`prev${isPrevVisible ? '' : ' hide'}`}\n              onClick={() => controlMoreItems('prev')}\n            >\n              이전\n            </button>\n            <button\n              className={`next${isNextVisible ? '' : ' hide'}`}\n              onClick={() => controlMoreItems('next')}\n            >\n              다음\n            </button>\n          </div>\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default Detail\n"],"sourceRoot":""}